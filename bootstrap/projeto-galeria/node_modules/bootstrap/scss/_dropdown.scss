// The dropdown wrapper (`<div>`)
.dropup,
<<<<<<< HEAD
.dropend,
.dropdown,
.dropstart {
=======
.dropright,
.dropdown,
.dropleft {
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
  position: relative;
}

.dropdown-toggle {
<<<<<<< HEAD
  white-space: nowrap;

  // Generate the caret automatically
  @include caret();
=======
  // Generate the caret automatically
  @include caret;
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
}

// The dropdown menu
.dropdown-menu {
  position: absolute;
<<<<<<< HEAD
  z-index: $zindex-dropdown;
  display: none; // none by default, but block on "open" of the menu
  min-width: $dropdown-min-width;
  padding: $dropdown-padding-y $dropdown-padding-x;
  margin: 0; // Override default margin of ul
  @include font-size($dropdown-font-size);
  color: $dropdown-color;
=======
  top: 100%;
  left: 0;
  z-index: $zindex-dropdown;
  display: none; // none by default, but block on "open" of the menu
  float: left;
  min-width: $dropdown-min-width;
  padding: $dropdown-padding-y 0;
  margin: $dropdown-spacer 0 0; // override default ul
  font-size: $font-size-base; // Redeclare because nesting can cause inheritance issues
  color: $body-color;
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
  text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
  list-style: none;
  background-color: $dropdown-bg;
  background-clip: padding-box;
  border: $dropdown-border-width solid $dropdown-border-color;
  @include border-radius($dropdown-border-radius);
  @include box-shadow($dropdown-box-shadow);
<<<<<<< HEAD

  &[data-bs-popper] {
    top: 100%;
    left: 0;
    margin-top: $dropdown-spacer;
  }
}

// scss-docs-start responsive-breakpoints
// We deliberately hardcode the `bs-` prefix because we check
// this custom property in JS to determine Popper's positioning

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .dropdown-menu#{$infix}-start {
      --bs-position: start;

      &[data-bs-popper] {
        right: auto;
        left: 0;
      }
    }

    .dropdown-menu#{$infix}-end {
      --bs-position: end;

      &[data-bs-popper] {
        right: 0;
        left: auto;
      }
    }
  }
}
// scss-docs-end responsive-breakpoints
=======
}

.dropdown-menu-right {
  right: 0;
  left: auto;
}
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f

// Allow for dropdowns to go bottom up (aka, dropup-menu)
// Just add .dropup after the standard .dropdown class and you're set.
.dropup {
<<<<<<< HEAD
  .dropdown-menu[data-bs-popper] {
=======
  .dropdown-menu {
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
    top: auto;
    bottom: 100%;
    margin-top: 0;
    margin-bottom: $dropdown-spacer;
  }

  .dropdown-toggle {
    @include caret(up);
  }
}

<<<<<<< HEAD
.dropend {
  .dropdown-menu[data-bs-popper] {
=======
.dropright {
  .dropdown-menu {
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
    top: 0;
    right: auto;
    left: 100%;
    margin-top: 0;
    margin-left: $dropdown-spacer;
  }

  .dropdown-toggle {
<<<<<<< HEAD
    @include caret(end);
=======
    @include caret(right);
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
    &::after {
      vertical-align: 0;
    }
  }
}

<<<<<<< HEAD
.dropstart {
  .dropdown-menu[data-bs-popper] {
=======
.dropleft {
  .dropdown-menu {
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
    top: 0;
    right: 100%;
    left: auto;
    margin-top: 0;
    margin-right: $dropdown-spacer;
  }

  .dropdown-toggle {
<<<<<<< HEAD
    @include caret(start);
=======
    @include caret(left);
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
    &::before {
      vertical-align: 0;
    }
  }
}

<<<<<<< HEAD

// Dividers (basically an `<hr>`) within the dropdown
.dropdown-divider {
  height: 0;
  margin: $dropdown-divider-margin-y 0;
  overflow: hidden;
  border-top: 1px solid $dropdown-divider-bg;
=======
// When enabled Popper.js, reset basic dropdown position
// stylelint-disable no-duplicate-selectors
.dropdown-menu {
  &[x-placement^="top"],
  &[x-placement^="right"],
  &[x-placement^="bottom"],
  &[x-placement^="left"] {
    right: auto;
    bottom: auto;
  }
}
// stylelint-enable no-duplicate-selectors

// Dividers (basically an `<hr>`) within the dropdown
.dropdown-divider {
  @include nav-divider($dropdown-divider-bg);
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
}

// Links, buttons, and more within the dropdown menu
//
// `<button>`-specific styles are denoted with `// For <button>s`
.dropdown-item {
  display: block;
  width: 100%; // For `<button>`s
  padding: $dropdown-item-padding-y $dropdown-item-padding-x;
  clear: both;
  font-weight: $font-weight-normal;
  color: $dropdown-link-color;
  text-align: inherit; // For `<button>`s
<<<<<<< HEAD
  text-decoration: if($link-decoration == none, null, none);
=======
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
  white-space: nowrap; // prevent links from randomly breaking onto new lines
  background-color: transparent; // For `<button>`s
  border: 0; // For `<button>`s

<<<<<<< HEAD
  // Prevent dropdown overflow if there's no padding
  // See https://github.com/twbs/bootstrap/pull/27703
  @if $dropdown-padding-y == 0 {
    &:first-child {
      @include border-top-radius($dropdown-inner-border-radius);
    }

    &:last-child {
      @include border-bottom-radius($dropdown-inner-border-radius);
    }
  }

  &:hover,
  &:focus {
    color: $dropdown-link-hover-color;
    text-decoration: if($link-hover-decoration == underline, none, null);
=======
  @include hover-focus {
    color: $dropdown-link-hover-color;
    text-decoration: none;
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
    @include gradient-bg($dropdown-link-hover-bg);
  }

  &.active,
  &:active {
    color: $dropdown-link-active-color;
    text-decoration: none;
    @include gradient-bg($dropdown-link-active-bg);
  }

  &.disabled,
  &:disabled {
    color: $dropdown-link-disabled-color;
<<<<<<< HEAD
    pointer-events: none;
    background-color: transparent;
    // Remove CSS gradients if they're enabled
    background-image: if($enable-gradients, none, null);
=======
    background-color: transparent;
    // Remove CSS gradients if they're enabled
    @if $enable-gradients {
      background-image: none;
    }
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
  }
}

.dropdown-menu.show {
  display: block;
}

// Dropdown section headers
.dropdown-header {
  display: block;
<<<<<<< HEAD
  padding: $dropdown-header-padding;
  margin-bottom: 0; // for use with heading elements
  @include font-size($font-size-sm);
=======
  padding: $dropdown-padding-y $dropdown-item-padding-x;
  margin-bottom: 0; // for use with heading elements
  font-size: $font-size-sm;
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
  color: $dropdown-header-color;
  white-space: nowrap; // as with > li > a
}

// Dropdown text
.dropdown-item-text {
  display: block;
  padding: $dropdown-item-padding-y $dropdown-item-padding-x;
  color: $dropdown-link-color;
}
<<<<<<< HEAD

// Dark dropdowns
.dropdown-menu-dark {
  color: $dropdown-dark-color;
  background-color: $dropdown-dark-bg;
  border-color: $dropdown-dark-border-color;
  @include box-shadow($dropdown-dark-box-shadow);

  .dropdown-item {
    color: $dropdown-dark-link-color;

    &:hover,
    &:focus {
      color: $dropdown-dark-link-hover-color;
      @include gradient-bg($dropdown-dark-link-hover-bg);
    }

    &.active,
    &:active {
      color: $dropdown-dark-link-active-color;
      @include gradient-bg($dropdown-dark-link-active-bg);
    }

    &.disabled,
    &:disabled {
      color: $dropdown-dark-link-disabled-color;
    }
  }

  .dropdown-divider {
    border-color: $dropdown-dark-divider-bg;
  }

  .dropdown-item-text {
    color: $dropdown-dark-link-color;
  }

  .dropdown-header {
    color: $dropdown-dark-header-color;
  }
}
=======
>>>>>>> ec2fe0ed0a0234e021dd53c74b9bd62ec07f1f0f
