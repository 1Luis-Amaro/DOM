WITH TAB_PERIODS AS
 (SELECT PERIOD_COUNTER PERIOD_PC,
         PERIOD_OPEN_DATE PERIOD_POD,
         NVL(PERIOD_CLOSE_DATE, SYSDATE) PERIOD_PCD,
         FISCAL_YEAR PERIOD_FY,
         BOOK_TYPE_CODE BOOK,
         PERIOD_NAME
    FROM APPS.FA_DEPRN_PERIODS)
SELECT TH.BOOK_TYPE_CODE LIVRO,
       TO_CHAR (TAB_PERIODS_1.PERIOD_NAME) PERIODO_DE,
       TO_CHAR (TAB_PERIODS_2.PERIOD_NAME) PERIODO_ATE,
       DHCC.SEGMENT1 LOCATION,
       DHCC.SEGMENT2 MINOR,
       DHCC.segment6 PL,
       FALU.MEANING ASSET_TYPE,
       DECODE(AH.ASSET_TYPE, 'CIP', CB.CIP_COST_ACCT, CB.ASSET_COST_ACCT) ASSET_ACCOUNT,
       DHCC.SEGMENT5 COST_CENTER,
       DECODE(AH.ASSET_TYPE, 'CIP', NULL, CB.DEPRN_RESERVE_ACCT) RES_ACCOUNT,
       AD.ASSET_NUMBER,
       AD.DESCRIPTION DESCRIPTION,
       BKS.DATE_PLACED_IN_SERVICE START_DATE,
       BKS.DEPRN_METHOD_CODE METHOD,
       BKS.LIFE_IN_MONTHS LIFE,
       BKS.PRODUCTION_CAPACITY PROD,
       BKS.ADJUSTED_RATE ADJ_RATE,
       DECODE(AH.ASSET_TYPE, 'CIP', 0, NVL(DS.BONUS_RATE, 0)) BONUS_RATE,
       SUM(NVL(DECODE(ADJ1.DEBIT_CREDIT_FLAG, 'DR', 1, -1) *
               ADJ1.ADJUSTMENT_AMOUNT,
               DD.ADDITION_COST_TO_CLEAR)) COST,
       SUM(NVL(DD.YTD_DEPRN, 0)) YTD_DEPRN,
       SUM(DD.DEPRN_RESERVE) DEPRN_RESERVE,
       TH.TRANSACTION_HEADER_ID THID
  FROM apps.FA_LOOKUPS              FALU,
       apps.FA_ADDITIONS            AD,
       apps.FA_ASSET_HISTORY        AH,
       apps.FA_TRANSACTION_HEADERS  TH,
       apps.FA_CATEGORY_BOOKS       CB,
       apps.FA_DISTRIBUTION_HISTORY DH,
       apps.GL_CODE_COMBINATIONS    DHCC,
       apps.FA_ADJUSTMENTS          ADJ1,
       apps.FA_BOOKS                BKS,
       apps.FA_DEPRN_SUMMARY        DS,
       apps.FA_DEPRN_DETAIL         DD,
       apps.FND_CURRENCIES          FC,
       apps.FA_BOOK_CONTROLS        BC,
       apps.GL_SETS_OF_BOOKS        SOB,
       TAB_PERIODS             TAB_PERIODS_1,
       TAB_PERIODS             TAB_PERIODS_2
 WHERE 1 = 1
   AND TAB_PERIODS_1.BOOK = TH.BOOK_TYPE_CODE
   AND TAB_PERIODS_2.BOOK = TH.BOOK_TYPE_CODE
   AND TH.DATE_EFFECTIVE BETWEEN TAB_PERIODS_1.PERIOD_POD AND TAB_PERIODS_2.PERIOD_PCD
   AND ADJ1.BOOK_TYPE_CODE = TH.BOOK_TYPE_CODE
   AND ADJ1.TRANSACTION_HEADER_ID = TH.TRANSACTION_HEADER_ID
   AND ((ADJ1.SOURCE_TYPE_CODE = 'CIP ADDITION' AND
       ADJ1.ADJUSTMENT_TYPE = 'CIP COST') OR
       (ADJ1.SOURCE_TYPE_CODE = 'ADDITION' AND
       ADJ1.ADJUSTMENT_TYPE = 'COST'))
   AND DH.DISTRIBUTION_ID = ADJ1.DISTRIBUTION_ID
   AND DHCC.CODE_COMBINATION_ID = DH.CODE_COMBINATION_ID
   AND FALU.LOOKUP_TYPE = 'ASSET TYPE'
   AND AH.ASSET_TYPE = FALU.LOOKUP_CODE
   AND AD.ASSET_ID = TH.ASSET_ID
   AND AH.ASSET_ID = TH.ASSET_ID
   AND TH.DATE_EFFECTIVE >= AH.DATE_EFFECTIVE
   AND TH.DATE_EFFECTIVE < NVL(AH.DATE_INEFFECTIVE, SYSDATE)
   AND BKS.TRANSACTION_HEADER_ID_IN = TH.TRANSACTION_HEADER_ID
   AND CB.BOOK_TYPE_CODE = TH.BOOK_TYPE_CODE
   AND CB.CATEGORY_ID = AH.CATEGORY_ID
   AND BC.BOOK_TYPE_CODE = TH.BOOK_TYPE_CODE 
   AND SOB.SET_OF_BOOKS_ID = BC.SET_OF_BOOKS_ID
   AND SOB.CURRENCY_CODE = FC.CURRENCY_CODE
   AND DD.BOOK_TYPE_CODE(+) = ADJ1.BOOK_TYPE_CODE
   AND DD.DISTRIBUTION_ID(+) = ADJ1.DISTRIBUTION_ID
   AND DD.DEPRN_SOURCE_CODE(+) = 'B'
   AND DS.BOOK_TYPE_CODE(+) = ADJ1.BOOK_TYPE_CODE
   AND DS.ASSET_ID(+) = ADJ1.ASSET_ID
   AND DS.PERIOD_COUNTER(+) = ADJ1.PERIOD_COUNTER_CREATED
 GROUP BY TH.BOOK_TYPE_CODE,DHCC.SEGMENT1,
          DHCC.SEGMENT2,
          DHCC.segment6,
          FALU.MEANING,
          DECODE(AH.ASSET_TYPE, 'CIP', CB.CIP_COST_ACCT, CB.ASSET_COST_ACCT),
          DHCC.SEGMENT5,
          DECODE(AH.ASSET_TYPE, 'CIP', NULL, CB.DEPRN_RESERVE_ACCT),
          AD.ASSET_NUMBER,
          AD.DESCRIPTION,
          BKS.DATE_PLACED_IN_SERVICE,
          BKS.DEPRN_METHOD_CODE,
          BKS.LIFE_IN_MONTHS,
          BKS.PRODUCTION_CAPACITY,
          BKS.ADJUSTED_RATE,
          DECODE(AH.ASSET_TYPE, 'CIP', 0, NVL(DS.BONUS_RATE, 0)),
          TH.TRANSACTION_HEADER_ID,
          FC.PRECISION,
          TAB_PERIODS_1.PERIOD_NAME,
          TAB_PERIODS_2.PERIOD_NAME
UNION
SELECT DISTINCT TH.BOOK_TYPE_CODE LIVRO,
                TH.PERIODO_1 PERIODO_DE,
                TH.PERIODO_2 PERIODO_ATE,
                DHCC.SEGMENT1 LOCATION,
                DHCC.SEGMENT2 MINOR,
                DHCC.segment6 PL,   
                FALU.MEANING ASSET_TYPE,
                DECODE(AH.ASSET_TYPE,
                       'CIP',
                       CB.CIP_COST_ACCT,
                       CB.ASSET_COST_ACCT) GL_ACCOUNT,
                DHCC.SEGMENT5 COST_CENTER,
                DECODE(AH.ASSET_TYPE, 'CIP', NULL, CB.DEPRN_RESERVE_ACCT) RES_ACCOUNT,
                AD.ASSET_NUMBER,
                AD.DESCRIPTION ASSET_NUMBER,
                BKS.DATE_PLACED_IN_SERVICE START_DATE,
                BKS.DEPRN_METHOD_CODE METHOD,
                BKS.LIFE_IN_MONTHS LIFE,
                BKS.PRODUCTION_CAPACITY PROD,
                BKS.ADJUSTED_RATE ADJ_RATE,
                DECODE(AH.ASSET_TYPE, 'CIP', 0, NVL(DS.BONUS_RATE, 0)) BONUS_RATE,
                0 COST,
                0 YTD_DEPRN,
                0 DEPRN_RESERVE,
                TH.TRANSACTION_HEADER_ID THID
  FROM apps.FA_LOOKUPS FALU,
       apps.FA_ADDITIONS AD,
       apps.FA_ASSET_HISTORY AH,
       apps.FA_CATEGORY_BOOKS CB,
       apps.GL_CODE_COMBINATIONS DHCC,
       apps.FA_DISTRIBUTION_HISTORY DH,
       apps.FA_BOOKS BKS,
       apps.FA_DEPRN_SUMMARY DS,
       apps.FND_CURRENCIES FC,
       apps.FA_BOOK_CONTROLS BC,
       apps.GL_SETS_OF_BOOKS SOB,
       (SELECT TH.BOOK_TYPE_CODE,
               TH.TRANSACTION_HEADER_ID,
               TH.ASSET_ID,
               TH.DATE_EFFECTIVE,
               DP.PERIOD_COUNTER,
               TO_CHAR (TAB_PERIODS_1.PERIOD_NAME) PERIODO_1,
               TO_CHAR (TAB_PERIODS_2.PERIOD_NAME) PERIODO_2
          FROM apps.FA_TRANSACTION_HEADERS TH,
               apps.FA_DEPRN_PERIODS       DP,
               TAB_PERIODS            TAB_PERIODS_1,
               TAB_PERIODS            TAB_PERIODS_2
         WHERE 1 = 1
           AND TH.TRANSACTION_TYPE_CODE IN ('ADDITION', 'CIP ADDITION')
           AND TAB_PERIODS_1.BOOK = TH.BOOK_TYPE_CODE
           AND TAB_PERIODS_2.BOOK = TH.BOOK_TYPE_CODE
           AND TH.DATE_EFFECTIVE BETWEEN TAB_PERIODS_1.PERIOD_POD AND
               TAB_PERIODS_2.PERIOD_PCD
           AND DP.BOOK_TYPE_CODE = TH.BOOK_TYPE_CODE
           AND TH.DATE_EFFECTIVE BETWEEN DP.PERIOD_OPEN_DATE AND
               NVL(DP.PERIOD_CLOSE_DATE, SYSDATE)) TH
 WHERE DH.ASSET_ID = TH.ASSET_ID
   AND TH.DATE_EFFECTIVE >= DH.DATE_EFFECTIVE
   AND TH.DATE_EFFECTIVE < NVL(DH.DATE_INEFFECTIVE, SYSDATE)
   AND DHCC.CODE_COMBINATION_ID = DH.CODE_COMBINATION_ID
   AND FALU.LOOKUP_TYPE = 'ASSET TYPE'
   AND AH.ASSET_TYPE = FALU.LOOKUP_CODE
   AND AD.ASSET_ID = TH.ASSET_ID
   AND AH.ASSET_ID = TH.ASSET_ID
   AND TH.DATE_EFFECTIVE >= AH.DATE_EFFECTIVE
   AND TH.DATE_EFFECTIVE < NVL(AH.DATE_INEFFECTIVE, SYSDATE)
   AND BKS.TRANSACTION_HEADER_ID_IN = TH.TRANSACTION_HEADER_ID
   AND BKS.COST = 0
   AND CB.BOOK_TYPE_CODE = TH.BOOK_TYPE_CODE
   AND CB.CATEGORY_ID = AH.CATEGORY_ID
   AND BC.BOOK_TYPE_CODE = TH.BOOK_TYPE_CODE
   AND SOB.SET_OF_BOOKS_ID = BC.SET_OF_BOOKS_ID
   AND SOB.CURRENCY_CODE = FC.CURRENCY_CODE
   AND DS.BOOK_TYPE_CODE(+) = TH.BOOK_TYPE_CODE
   AND DS.ASSET_ID(+) = TH.ASSET_ID
   AND DS.PERIOD_COUNTER(+) = TH.PERIOD_COUNTER
 ORDER BY 1, 2, 3, 4, 5, 6, 7, 8